#!/bin/bash

# 🚀 LeetCode Activity Setup Script
# This script helps you set up your personal workspace for the collaborative activity

echo "🎯 Welcome to LeetCode Collaborative Problem-Solving Activity!"
echo "=================================================="

# Get user name
echo "👤 Enter your name (use lowercase with dashes, e.g., 'somchai-dev'): "
read YOUR_NAME

# Validate name format
if [[ ! "$YOUR_NAME" =~ ^[a-z0-9-]+$ ]]; then
    echo "❌ Error: Name should contain only lowercase letters, numbers, and dashes"
    echo "✅ Good examples: somchai-dev, alice-smith, john123"
    exit 1
fi

# Check if already on a feature branch
CURRENT_BRANCH=$(git branch --show-current)
if [[ "$CURRENT_BRANCH" == "feature/$YOUR_NAME" ]]; then
    echo "✅ Already on branch feature/$YOUR_NAME"
else
    echo "🔀 Creating and switching to branch: feature/$YOUR_NAME"
    git checkout -b feature/$YOUR_NAME
    if [ $? -ne 0 ]; then
        echo "❌ Failed to create branch. Make sure you have a clean working directory."
        exit 1
    fi
fi

# Check if directory already exists
if [ -d "$YOUR_NAME" ]; then
    echo "⚠️  Directory $YOUR_NAME already exists. Skipping creation."
else
    echo "📁 Creating personal directory: $YOUR_NAME"
    mkdir "$YOUR_NAME"
fi

# Copy solution files
echo "📋 Copying solution files to your workspace..."
if [ ! -f "solutions/section1.cpp" ] || [ ! -f "solutions/section2.py" ]; then
    echo "❌ Error: Original solution files not found in solutions/ directory"
    exit 1
fi

cp solutions/section1.cpp "$YOUR_NAME/"
cp solutions/section2.py "$YOUR_NAME/"

# Create personal README if it doesn't exist
if [ ! -f "$YOUR_NAME/README.md" ]; then
    echo "📝 Creating personal README.md..."
    cat > "$YOUR_NAME/README.md" << EOF
# $YOUR_NAME's Learning Journey

> **Activity Date**: $(date +"%Y-%m-%d")  
> **Branch**: feature/$YOUR_NAME

## 🎯 Problems to Solve

### ✅ Progress Checklist
- [ ] **Two Sum Problem** (section1.cpp)
  - [ ] Found and fixed Bug 1
  - [ ] Found and fixed Bug 2  
  - [ ] Found and fixed Bug 3
  - [ ] All test cases pass
  
- [ ] **Median of Two Sorted Arrays** (section2.py)
  - [ ] Found and fixed Bug 1
  - [ ] Found and fixed Bug 2
  - [ ] Found and fixed Bug 3
  - [ ] All test cases pass

## 🐛 Bugs Found & Fixed

### Two Sum Problem
1. **Bug 1**: [Describe the bug you found]
   - **Fix**: [Describe how you fixed it]
   
2. **Bug 2**: [Describe the bug you found]
   - **Fix**: [Describe how you fixed it]
   
3. **Bug 3**: [Describe the bug you found]
   - **Fix**: [Describe how you fixed it]

### Median of Sorted Arrays  
1. **Bug 1**: [Describe the bug you found]
   - **Fix**: [Describe how you fixed it]
   
2. **Bug 2**: [Describe the bug you found]
   - **Fix**: [Describe how you fixed it]
   
3. **Bug 3**: [Describe the bug you found]
   - **Fix**: [Describe how you fixed it]

## 📚 Learning Reflection

### 🎓 Critical Thinking
- **What I learned**: [Your insights about problem analysis]
- **Challenges faced**: [Difficulties in understanding problems]

### 🛠️ Problem Solving
- **Debugging process**: [How you approached finding bugs]
- **Solution strategies**: [Different approaches you considered]

### 🤝 Collaboration & Communication  
- **Best feedback received**: [Helpful comments from peers]
- **Most useful review I gave**: [How you helped others]

### 📖 Lifelong Learning
- **Key takeaways**: [What you'll remember from this activity]
- **Future goals**: [Skills you want to develop next]

## 🏆 Achievements
- [ ] Successfully debugged all problems
- [ ] Provided constructive peer feedback  
- [ ] Received helpful code reviews
- [ ] Completed reflection documentation

## 🤝 Collaboration Notes

### Peer Reviews Given:
- **To [Name]**: [Brief note about feedback provided]
- **To [Name]**: [Brief note about feedback provided]

### Feedback Received:
- **From [Name]**: [Brief note about helpful feedback]
- **From [Name]**: [Brief note about helpful feedback]

---
*Generated by setup script on $(date)*
EOF
    echo "✅ Personal README.md created with templates"
else
    echo "ℹ️  Personal README.md already exists, keeping current version"
fi

# Initial commit
echo "💾 Creating initial commit..."
git add "$YOUR_NAME/"
git status

# Check if there are changes to commit
if git diff --cached --quiet; then
    echo "ℹ️  No changes to commit (files may already be committed)"
else
    git commit -m "Initial setup: Create personal workspace for $YOUR_NAME

- Created branch feature/$YOUR_NAME
- Set up personal directory with solution templates  
- Added structured README.md for learning documentation
- Ready for LeetCode problem-solving activity"
    
    echo "🚀 Pushing to remote repository..."
    git push -u origin feature/$YOUR_NAME
    
    if [ $? -eq 0 ]; then
        echo "✅ Successfully pushed to remote!"
    else
        echo "⚠️  Push failed. You may need to set up remote repository first."
    fi
fi

echo ""
echo "🎉 Setup Complete! Here's what you can do next:"
echo "=================================================="
echo "1. 📖 Read the problems in docs/idea.md"
echo "2. 🔍 Analyze the buggy solutions in your $YOUR_NAME/ folder"
echo "3. 🐛 Find and fix the 3 bugs in each solution"
echo "4. ✅ Test your fixes with the provided test cases"
echo "5. 💾 Commit your changes: git add $YOUR_NAME/ && git commit -m 'Fix: [description]'"
echo "6. 📤 Push and create Pull Request for peer review"
echo ""
echo "📁 Your workspace: ./$YOUR_NAME/"
echo "🔗 Your branch: feature/$YOUR_NAME"
echo "📝 Document your learning in: $YOUR_NAME/README.md"
echo ""
echo "Happy coding! 🚀"